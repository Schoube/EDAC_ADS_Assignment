
class StackOperations {
	int top;
	int stack[];

	public StackOperations(int size) {
		stack = new int[size];
		top = -1;
	}

	public void push(int val) {
		top++;
		stack[top] = val;
		System.out.println(stack[top]);
	}

	public void pop() {
		System.out.println("Popped element is :" + stack[top--]);
	}

	public int peek() {
		return stack[top];
	}

	public boolean isEmpty() {
		return top == -1;
	}

	public boolean isFull() {
		return top == stack.length - 1;
	}
	// public void display() {
	// while (top != -1) {
	// top--;
	// System.out.println(stack[top]);
	// }
}

public class StackMain {

	public static void main(String[] args) {
		StackOperations sop = new StackOperations(10);
		sop.push(10);
		sop.push(30);
		sop.push(40);
		sop.push(80);
		sop.push(20);
		// sop.display();

		// System.out.println("Popped Element is :");
		// sop.display();
		int peek = sop.peek();
		System.out.println("Peek element is :" + peek);
		// sop.display();
		while (!sop.isEmpty()) {
			sop.pop();
		}
		System.out.println("Stack is empty");
	}

}

class CircularQueueMain {

}

public class CircularQueue {
	public static void main(String[] args) {

	}
}
